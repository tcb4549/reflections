How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Only the differences were displayed which helped pinpoint the problem and save time.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You could see previous versions of the code that may not have worked and you can avoid trying them again.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    A pro would be you only commit when you have significant changes and not fill up the history 
    with minute changes.  A con would be you could potentially forget to save something important.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Allowing multiple files in one commit would make it easier to deploy a new version all at once and not one file
    at a time which could be tedious.  It also treats the files as a unit that work together

How can you use the commands git log and git diff to view the history of files?

   Use git log to see the history of commits.  Use git diff to compare the changes in two commits
   using their commit IDs.

How might using version control make you more confident to make changes that
could break something?

    You can always compare against a previous version to see what changed if there is a problem.

Now that you have your workspace set up, what do you want to try using Git for?

    Version control on a work project
    
    